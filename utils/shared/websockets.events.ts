export enum WebsocketsQueries {
  healthCheck = 'query:healthCheck',
  findUser = 'query:findUser',
  findCurrentUser = 'query:findCurrentUser',
  getAccountBalance = 'query:getAccountBalance',
  getTransactions = 'query:getTransactions',
  getUserById = 'query:getUserById',
  batchGetUsers = 'query:batchGetUsers',
  getLifetimeAffiliateRewards = 'query:getLifetimeAffiliateRewards',
  getLifetimeRewards = 'query:getLifetimeRewards',
  getReferrals = 'query:getReferrals',
  getHostRewards = 'query:getHostRewards',
  batchGetDepositsWithUsers = 'query:batchGetDepositsWithUsers',
  getAllAffiliates = 'query:getAllAffiliates',
  getReferralsByMonth = 'query:getReferralsByMonth',
  batchGetWithdrawalsWithUsers = 'query:batchGetWithdrawalsWithUsers',
  getGameDataPublic = 'query:getGameDataPublic',
  getGameTransactionsForGame = 'query:getGameTransactionsForGame',
  activeReferral = 'query:activeReferral',
  getChat = 'query:getChat',
  getEncryptedDecks = 'query:getEncryptedDecks',
  getGameLogs = 'query:getGameLogs',
  getEmotes = 'query:getEmotes',
  getGameData = 'query:getGameData',
  getTimeouts = 'query:getTimeouts',
  externalIdToUserId = 'query:externalIdToUserId',
  getDegenRouletteGame = 'query:getDegenRouletteGame',
  batchGetActiveGameDataWithRevenue = 'query:batchGetActiveGameDataWithRevenue',
  batchGetUsernames = 'query:batchGetUsernames',
  getGameStatisticsByMonth = 'query:getGameStatisticsByMonth',
  getArchivedGameStatisticsByMonth = 'query:getArchivedGameStatisticsByMonth',
  batchGetGameRevenue = 'query:batchGetGameRevenue',
  getGameRevenueBreakdown = 'query:getGameRevenueBreakdown',
  getHandHistoryLogs = 'query:getHandHistoryLogs',
  getGameDataAdminPanel = 'query:getGameDataAdminPanel',
  getAdminRevenue = 'query:getAdminRevenue',
  getGameWithRevenueForMonth = 'query:getGameWithRevenueForMonth',
  getDirectDepositsData = 'query:getDirectDepositsData',
  getDirectWithdrawalsData = 'query:getDirectWithdrawalsData',
  getAllUsers = 'query:getAllUsers',
  getUserStatistics = 'query:getUserStatistics',
  getLifetimeHostRewards = 'query:getLifetimeHostRewards',
  getUnderReviewWithdrawalsWithUsers = 'query:getUnderReviewWithdrawalsWithUsers',
  getUserAddresses = 'query:getUserAddresses',
  getRakeForHand = 'query:getRakeForHand',
  getByReferredAndGame = 'query:getByReferredAndGame',
  getPerGameReferralsForUser = 'query:getPerGameReferralsForUser',
  getAffiliatePageData = 'query:getAffiliatePageData',
  getGameSummariesByIds = 'query:getGameSummariesByIds',
  getBalancesInStorage = 'query:getBalancesInStorage',
  getAddressInBlockchainByBlockchain = 'query:getAddressInBlockchainByBlockchain',
  getPublicGames = 'query:getPublicGames',
  getLatestDeposit = 'query:getLatestDeposit',
  getHandHistoryLogsPublic = 'query:getHandHistoryLogsPublic',
  getGameUserRake = 'query:getGameUserRake',
}

export enum WebsocketsMutations {
  CREATE_USER = 'mutation:createUser',
  UPDATE_USER = 'mutation:updateUser',
  createGame = 'mutation:createGame',
  updateGameData = 'mutation:updateGameData',
  processRewardsAndCashouts = 'mutation:processRewardsAndCashouts',
  saveTimeout = 'mutation:saveTimeout',
  saveEncryptedDeck = 'mutation:saveEncryptedDeck',
  updateGameDataAndTimeout = 'mutation:updateGameDataAndTimeout',
  updateGameDataAndDeleteTimeout = 'mutation:updateGameDataAndDeleteTimeout',
  assignAffiliate = 'mutation:assignAffiliate',
  removeAffiliate = 'mutation:removeAffiliate',
  refreshAllHostRewards = 'mutation:refreshAllHostRewards',
  rollupHostRewards = 'mutation:rollupHostRewards',
  addUserToAffiliate = 'mutation:addUserToAffiliate',
  rollupPlatformRevenue = 'mutation:rollupPlatformRevenue',
  refreshAllGameRevenue = 'mutation:refreshAllGameRevenue',
  deleteAllRevenueRows = 'mutation:deleteAllRevenueRows',
  retryWithdrawal = 'mutation:retryWithdrawal',
  approveWithdrawal = 'mutation:approveWithdrawal',
  rejectWithdrawal = 'mutation:rejectWithdrawal',
  sendMessage = 'mutation:sendMessage',
  insertRake = 'mutation:insertRake',
  claimRewards = 'mutation:claimRewards',
  claimAffiliateRewards = 'mutation:claimAffiliateRewards',
  updateUserPreferences = 'mutation:updateUserPreferences',
  adminTransferFunds = 'mutation:adminTransferFunds',
  sendEmote = 'mutation:sendEmote',
  insertReferralForGameById = 'mutation:insertReferralForGameById',
  updateAffiliateDuration = 'mutation:updateAffiliateDuration',
}


export enum LifecycleEvents {
  SOCKET_AUTHORIZED = 'socket:authorized',
  SOCKET_REFRESH_TOKEN = 'socket:refreshToken',
  HEALTH_CHECK = 'health:check',
}
